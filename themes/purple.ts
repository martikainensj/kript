import base from "./base"

const theme = {
	dark: {
		...base.dark,
		colors: {
			"primary": "rgb(213, 186, 255)",
			"onPrimary": "rgb(64, 19, 124)",
			"primaryContainer": "rgb(87, 48, 148)",
			"onPrimaryContainer": "rgb(236, 220, 255)",
			"secondary": "rgb(206, 194, 219)",
			"onSecondary": "rgb(53, 45, 64)",
			"secondaryContainer": "rgb(75, 67, 87)",
			"onSecondaryContainer": "rgb(234, 222, 247)",
			"tertiary": "rgb(241, 183, 195)",
			"onTertiary": "rgb(75, 37, 47)",
			"tertiaryContainer": "rgb(100, 59, 69)",
			"onTertiaryContainer": "rgb(255, 217, 224)",
			"error": "rgb(255, 180, 171)",
			"onError": "rgb(105, 0, 5)",
			"errorContainer": "rgb(147, 0, 10)",
			"onErrorContainer": "rgb(255, 180, 171)",
			"background": "rgb(29, 27, 30)",
			"onBackground": "rgb(230, 225, 230)",
			"surface": "rgb(29, 27, 30)",
			"onSurface": "rgb(230, 225, 230)",
			"surfaceVariant": "rgb(73, 69, 78)",
			"onSurfaceVariant": "rgb(203, 196, 207)",
			"outline": "rgb(149, 142, 153)",
			"outlineVariant": "rgb(73, 69, 78)",
			"shadow": "rgb(0, 0, 0)",
			"scrim": "rgb(0, 0, 0)",
			"inverseSurface": "rgb(230, 225, 230)",
			"inverseOnSurface": "rgb(50, 48, 51)",
			"inversePrimary": "rgb(112, 73, 174)",
			"elevation": {
				"level0": "transparent",
				"level1": "rgb(38, 35, 41)",
				"level2": "rgb(44, 40, 48)",
				"level3": "rgb(49, 45, 55)",
				"level4": "rgb(51, 46, 57)",
				"level5": "rgb(55, 49, 62)"
			},
			"surfaceDisabled": "rgba(230, 225, 230, 0.12)",
			"onSurfaceDisabled": "rgba(230, 225, 230, 0.38)",
			"backdrop": "rgba(51, 47, 55, 0.4)",
			"success": "rgb(123, 218, 156)",
			"onSuccess": "rgb(0, 57, 29)",
			"successContainer": "rgb(0, 82, 44)",
			"onSuccessContainer": "rgb(151, 247, 183)"
		}
	},
	light: {
		...base.light,
		colors: {
			"primary": "rgb(112, 73, 174)",
			"onPrimary": "rgb(255, 255, 255)",
			"primaryContainer": "rgb(236, 220, 255)",
			"onPrimaryContainer": "rgb(39, 0, 87)",
			"secondary": "rgb(100, 91, 112)",
			"onSecondary": "rgb(255, 255, 255)",
			"secondaryContainer": "rgb(234, 222, 247)",
			"onSecondaryContainer": "rgb(31, 24, 42)",
			"tertiary": "rgb(127, 82, 92)",
			"onTertiary": "rgb(255, 255, 255)",
			"tertiaryContainer": "rgb(255, 217, 224)",
			"onTertiaryContainer": "rgb(50, 16, 26)",
			"error": "rgb(186, 26, 26)",
			"onError": "rgb(255, 255, 255)",
			"errorContainer": "rgb(255, 218, 214)",
			"onErrorContainer": "rgb(65, 0, 2)",
			"background": "rgb(255, 251, 255)",
			"onBackground": "rgb(29, 27, 30)",
			"surface": "rgb(255, 251, 255)",
			"onSurface": "rgb(29, 27, 30)",
			"surfaceVariant": "rgb(232, 224, 235)",
			"onSurfaceVariant": "rgb(73, 69, 78)",
			"outline": "rgb(123, 117, 127)",
			"outlineVariant": "rgb(203, 196, 207)",
			"shadow": "rgb(0, 0, 0)",
			"scrim": "rgb(0, 0, 0)",
			"inverseSurface": "rgb(50, 48, 51)",
			"inverseOnSurface": "rgb(245, 239, 244)",
			"inversePrimary": "rgb(213, 186, 255)",
			"elevation": {
				"level0": "transparent",
				"level1": "rgb(248, 242, 251)",
				"level2": "rgb(244, 237, 249)",
				"level3": "rgb(239, 231, 246)",
				"level4": "rgb(238, 230, 245)",
				"level5": "rgb(235, 226, 244)"
			},
			"surfaceDisabled": "rgba(29, 27, 30, 0.12)",
			"onSurfaceDisabled": "rgba(29, 27, 30, 0.38)",
			"backdrop": "rgba(51, 47, 55, 0.4)",
			"success": "rgb(0, 109, 61)",
			"onSuccess": "rgb(255, 255, 255)",
			"successContainer": "rgb(151, 247, 183)",
			"onSuccessContainer": "rgb(0, 33, 15)"
		}
	}
} as typeof base;

export default theme;